{"ast":null,"code":"var _jsxFileName = \"/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/components/streams/StreamList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderAdmin = stream => {\n      if (stream.userId === this.props.currentUserId) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right floated content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button primary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button negative\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.renderList = () => {\n      return this.props.streams.map(stream => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"large middle aligned icon camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description\",\n              children: stream.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this), this.renderAdmin(stream)]\n        }, stream.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  streams,\n  auth\n}) => {\n  return {\n    streams: Object.values(streams),\n    currentUserId: auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/components/streams/StreamList.js"],"names":["React","Component","connect","fetchStreams","StreamList","renderAdmin","stream","userId","props","currentUserId","renderList","streams","map","title","description","id","componentDidMount","render","mapStateToProps","auth","Object","values"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAKjCI,WALiC,GAKlBC,MAAD,IAAY;AACxB,UAAIA,MAAM,CAACC,MAAP,KAAkB,KAAKC,KAAL,CAAWC,aAAjC,EAAgD;AAC9C,4BACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;AACF,KAdgC;;AAAA,SAgBjCC,UAhBiC,GAgBpB,MAAM;AACjB,aAAO,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,GAAnB,CAAwBN,MAAD,IAAY;AACxC,4BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,uBACGA,MAAM,CAACO,KADV,eAEE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,wBAA8BP,MAAM,CAACQ;AAArC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAMG,KAAKT,WAAL,CAAiBC,MAAjB,CANH;AAAA,WAA2BA,MAAM,CAACS,EAAlC;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXM,CAAP;AAYD,KA7BgC;AAAA;;AACjCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,KAAL,CAAWL,YAAX;AACD;;AA4BDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiC,KAAKP,UAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAtCgC;;AAyCnC,MAAMQ,eAAe,GAAG,CAAC;AAAEP,EAAAA,OAAF;AAAWQ,EAAAA;AAAX,CAAD,KAAuB;AAC7C,SAAO;AACLR,IAAAA,OAAO,EAAES,MAAM,CAACC,MAAP,CAAcV,OAAd,CADJ;AAELF,IAAAA,aAAa,EAAEU,IAAI,CAACZ;AAFf,GAAP;AAID,CALD;;AAOA,eAAeL,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin = (stream) => {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <button className=\"ui button primary\">Edit</button>\n          <button className=\"ui button negative\">Delete</button>\n        </div>\n      );\n    }\n  };\n\n  renderList = () => {\n    return this.props.streams.map((stream) => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            {stream.title}\n            <div className=\"description\">{stream.description}</div>\n          </div>\n          {this.renderAdmin(stream)}\n        </div>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ streams, auth }) => {\n  return {\n    streams: Object.values(streams),\n    currentUserId: auth.userId,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n"]},"metadata":{},"sourceType":"module"}