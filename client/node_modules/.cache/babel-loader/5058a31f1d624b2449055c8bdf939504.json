{"ast":null,"code":"var _jsxFileName = \"/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/components/streams/StreamEdit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './streamForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamEdit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.stream.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  streams\n}, ownProp) => {\n  return {\n    stream: streams[ownProp.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/components/streams/StreamEdit.js"],"names":["React","Component","connect","fetchStream","editStream","StreamForm","StreamEdit","onSubmit","formValues","console","log","componentDidMount","props","match","params","id","render","stream","title","mapStateToProps","streams","ownProp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAKjCM,QALiC,GAKrBC,UAAD,IAAgB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD,KAPgC;AAAA;;AACjCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWT,WAAX,CAAuB,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAMDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBAAO;AAAA,gBAAM,KAAKL,KAAL,CAAWK,MAAX,CAAkBC;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAfgC;;AAkBnC,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAcC,OAAd,KAA0B;AAChD,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,OAAO,CAACC,OAAO,CAACR,KAAR,CAAcC,MAAd,CAAqBC,EAAtB;AAAjB,GAAP;AACD,CAFD;;AAIA,eAAeb,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,UAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './streamForm';\n\nclass StreamEdit extends Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  onSubmit = (formValues) => {\n    console.log(formValues);\n  };\n\n  render() {\n    if (!this.props.stream) {\n      return <div>Loading ...</div>;\n    }\n\n    return <div>{this.props.stream.title}</div>;\n  }\n}\n\nconst mapStateToProps = ({ streams }, ownProp) => {\n  return { stream: streams[ownProp.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}