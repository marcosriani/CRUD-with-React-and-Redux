{"ast":null,"code":"var _jsxFileName = \"/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/components/streams/StreamList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderAdmin = stream => {\n      if (stream.userId === this.props.currentUserId) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right floated content\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/streams/edit/${stream.id}`,\n            className: \"ui button primary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/streams/delete/${stream.id}`,\n            className: \"ui button negative\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.renderList = () => {\n      return this.props.streams.map(stream => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"large middle aligned icon camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description\",\n              children: stream.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)]\n        }, stream.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.renderCreate = () => {\n      if (this.props.isSignedIn) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/streams/new\",\n            className: \"ui button primary\",\n            children: \"Create Stream\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), this.renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  streams,\n  auth\n}) => {\n  return {\n    streams: Object.values(streams),\n    currentUserId: auth.userId,\n    isSignedIn: auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/components/streams/StreamList.js"],"names":["React","Component","connect","Link","fetchStreams","StreamList","renderAdmin","stream","userId","props","currentUserId","id","renderList","streams","map","title","description","renderCreate","isSignedIn","textAlign","componentDidMount","render","mapStateToProps","auth","Object","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin = (stream) => {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          <Link\n            to={`/streams/delete/${stream.id}`}\n            className=\"ui button negative\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n  };\n\n  renderList = () => {\n    return this.props.streams.map((stream) => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdmin(stream)}\n\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            {stream.title}\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  renderCreate = () => {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: 'right' }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n        {this.renderCreate()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ streams, auth }) => {\n  return {\n    streams: Object.values(streams),\n    currentUserId: auth.userId,\n    isSignedIn: auth.isSignedIn,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n"]},"metadata":{},"sourceType":"module"}