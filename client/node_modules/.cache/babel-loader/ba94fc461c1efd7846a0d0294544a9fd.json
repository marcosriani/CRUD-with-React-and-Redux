{"ast":null,"code":"import _ from 'lodash';\nimport { CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from '../actions/types';\n\nconst streamReducer = (state = {}, action) => {\n  switch (action.type) {\n    // case FETCH_STREAMS:\n    //   return { ...state, ..._.mapKeys(action.payload, 'id') };\n    case FETCH_STREAMS:\n      return {};\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default streamReducer;","map":{"version":3,"sources":["/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/reducers/streamReducer.js"],"names":["_","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","streamReducer","state","action","type","payload","id","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,SACEC,aADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,WALF,QAMO,kBANP;;AAQA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE;AACA;AAEA,SAAKP,aAAL;AACE,aAAO,EAAP;;AAEF,SAAKC,YAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AAEF,SAAKT,aAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AAEF,SAAKL,WAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AAEF,SAAKN,aAAL;AACE,aAAOJ,CAAC,CAACY,IAAF,CAAOL,KAAP,EAAcC,MAAM,CAACE,OAArB,CAAP;;AAEF;AACE,aAAOH,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,aAAf","sourcesContent":["import _ from 'lodash';\n\nimport {\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM,\n} from '../actions/types';\n\nconst streamReducer = (state = {}, action) => {\n  switch (action.type) {\n    // case FETCH_STREAMS:\n    //   return { ...state, ..._.mapKeys(action.payload, 'id') };\n\n    case FETCH_STREAMS:\n      return {};\n\n    case FETCH_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n\n    case CREATE_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n\n    case EDIT_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default streamReducer;\n"]},"metadata":{},"sourceType":"module"}