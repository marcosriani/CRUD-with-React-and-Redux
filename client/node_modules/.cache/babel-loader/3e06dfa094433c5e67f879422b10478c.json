{"ast":null,"code":"var _jsxFileName = \"/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/components/streams/StreamShow.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamShow extends Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Stream show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  streams\n}, ownProps) => {\n  return {\n    stream: streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(null, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/components/streams/StreamShow.js"],"names":["React","Component","connect","fetchStream","StreamShow","componentDidMount","props","match","params","id","render","mapStateToProps","streams","ownProps","stream"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,WAAX,CAAuB,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAPgC;;AAUnC,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAcC,QAAd,KAA2B;AACjD,SAAO;AAAEC,IAAAA,MAAM,EAAEF,OAAO,CAACC,QAAQ,CAACN,KAAT,CAAeC,MAAf,CAAsBC,EAAvB;AAAjB,GAAP;AACD,CAFD;;AAIA,eAAeP,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAA+BC,UAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return <div>Stream show</div>;\n  }\n}\n\nconst mapStateToProps = ({ streams }, ownProps) => {\n  return { stream: streams[ownProps.match.params.id] };\n};\n\nexport default connect(null, { fetchStream })(StreamShow);\n"]},"metadata":{},"sourceType":"module"}