{"ast":null,"code":"var _jsxFileName = \"/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/components/streams/SteamDelete.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../modal';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamDelete extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderActions = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button negative\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button \",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this);\n\n    this.renderContent = () => {\n      if (!this.props.stream) {\n        return 'Are you sure you want to delete this stream?';\n      }\n\n      return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"StreamDelete\", /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Delete Stream\",\n        content: this.renderContent(),\n        actions: this.renderActions(),\n        onDismiss: () => history.push('/')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  streams\n}, ownProps) => {\n  return {\n    stream: streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/marcosriani/My Documents/Web-Development-2020/React/streaming-app/client/src/components/streams/SteamDelete.js"],"names":["React","Component","connect","Modal","history","fetchStream","StreamDelete","renderActions","renderContent","props","stream","title","componentDidMount","match","params","id","render","push","mapStateToProps","streams","ownProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAKnCM,aALmC,GAKnB,mBACd,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANiC;;AAAA,SAYnCC,aAZmC,GAYnB,MAAM;AACpB,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB;AACtB,eAAO,8CAAP;AACD;;AAED,aAAQ,0DAAyD,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,KAAM,EAAzF;AACD,KAlBkC;AAAA;;AACnCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAiBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8CAEE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,OAAO,EAAE,KAAKR,aAAL,EAFX;AAGE,QAAA,OAAO,EAAE,KAAKD,aAAL,EAHX;AAIE,QAAA,SAAS,EAAE,MAAMH,OAAO,CAACa,IAAR,CAAa,GAAb;AAJnB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAhCkC;;AAmCrC,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAcC,QAAd,KAA2B;AACjD,SAAO;AAAEV,IAAAA,MAAM,EAAES,OAAO,CAACC,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAAvB;AAAjB,GAAP;AACD,CAFD;;AAIA,eAAeb,OAAO,CAACgB,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,YAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '../modal';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions = () => (\n    <React.Fragment>\n      <button className=\"ui button negative\">Delete</button>\n      <button className=\"ui button \">Cancel</button>\n    </React.Fragment>\n  );\n\n  renderContent = () => {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream?';\n    }\n\n    return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`;\n  };\n\n  render() {\n    return (\n      <div>\n        StreamDelete\n        <Modal\n          title=\"Delete Stream\"\n          content={this.renderContent()}\n          actions={this.renderActions()}\n          onDismiss={() => history.push('/')}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ streams }, ownProps) => {\n  return { stream: streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamDelete);\n"]},"metadata":{},"sourceType":"module"}